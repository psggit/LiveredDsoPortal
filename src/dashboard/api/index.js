import React from "react"
import PageHeader from "Components/pageheader"
import Wrapper from "Components/contentWrapper"
import Button from "Components/button"
import Icon from "Components/icon"
import { apiKeyData } from "./../mock-data"
import DataTable from "Components/table/custom-table"
import Moment from "moment"
import Dialog from "Components/dialog"

class Api extends React.Component {

  constructor() {
    super()

    this.state = {
      generateKey: false,
      deleteKey: false,
      apiKey: ""
    }

    this.apiTableHeaders = [
      { title: "Name", icon: "" },
      { title: "API Key", icon: "" },
      { title: "Time", icon: "" },
      { title: "Generated by", icon: "" },
      { title: "", icon: "" }
    ]

    this.generateApiKey = this.generateApiKey.bind(this)
    this.mountApiKeyModal = this.mountApiKeyModal.bind(this)
    this.unMountApiKeyModal = this.unMountApiKeyModal.bind(this)
    this.deleteApiKey = this.deleteApiKey.bind(this)
    this.handleTextChange = this.handleTextChange.bind(this)
    this.openApiDoc = this.openApiDoc.bind(this)
  }

  handleTextChange(e) {
    this.setState({ apiKey: e.target.value })
  }

  deleteApiKey() {
    console.log("delete api key")
    this.setState({ deleteKey: false })
  }

  generateApiKey() {
    this.setState({ generateKey: false })
    console.log("Generate api key", this.state.apiKey)
  }

  openApiDoc() {
    window.open(`/api-doc.pdf`)
  }

  mountApiKeyModal(action) {
    if (action === "generate") {
      this.setState({ generateKey: true })
    } else {
      this.setState({ deleteKey: true })
    }
  }

  unMountApiKeyModal(action) {
    if (action === "generate") {
      this.setState({ generateKey: false })
    } else {
      this.setState({ deleteKey: false })
    }
  }

  render() {
    const { generateKey, deleteKey } = this.state
    return (
      <div id="apiContainer">
        <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>
          <PageHeader pageName="APIs" />
          <span>
            <Button primary onClick={() => this.mountApiKeyModal("generate")}>
              Generate Api
              <span style={{ marginLeft: '10px', verticalAlign: '-webkit-baseline-middle' }}>
                <Icon name="plusIcon" />
              </span>
            </Button>
          </span>
        </span>
        <Wrapper>
          <div className="body">
            {
              apiKeyData.length > 0 ?
                <React.Fragment>
                  <DataTable
                    headings={this.apiTableHeaders}
                    loadingData={false}
                    className="logs"
                  >
                    {
                      apiKeyData.map((item, i) => {
                        return (
                          <tr key={i}>
                            <td>{item.name}</td>
                            <td>{item.api_key}</td>
                            <td>{Moment(item.created_at).format("DD/MM/YYYY")}</td>
                            <td>{item.generated_by}</td>
                            <td style={{ cursor: 'pointer' }} onClick={() => this.mountApiKeyModal("delete")}>
                              <Icon name="delete" />
                            </td>
                          </tr>
                        )
                      })
                    }
                  </DataTable>
                  <div style={{ marginTop: '60px' }}>
                    <Button danger onClick={this.openApiDoc}>API Documentation</Button>
                    {/* <Button danger><a target="_blank" href="/api-doc.pdf">API Documentation</a></Button> */}
                  </div>
                </React.Fragment>
                : <div> Currently no APIs available </div>
            }
          </div>
        </Wrapper>
        {generateKey && (
          <Dialog
            title="Generate New API Key"
            subtitle="New API Key created"
            //inputBox={true}
            onClick={() => this.unMountApiKeyModal("generate")}
            actions={[
              <Button onClick={() => this.generateApiKey()} primary>
                Generate
              </Button>,
              <Button onClick={() => this.unMountApiKeyModal("generate")} secondary>
                Cancel
              </Button>
            ]}
          >
            <input type="text" className="large" onChange={this.handleTextChange} />
          </Dialog>
        )}
        {deleteKey && (
          <Dialog
            title={`Sure you want to delete ${1}`}
            onClick={() => this.unMountApiKeyModal("delete")}
            actions={[
              <Button onClick={() => this.deleteApiKey()} primary>
                Yes
              </Button>,
              <Button onClick={() => this.unMountApiKeyModal("delete")} secondary>
                No
              </Button>
            ]}
          />
        )}
      </div>
    )
  }
}

export default Api